{{- include "merge_presets" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: myapp
    env: {{ index .Values.global "myapp/Deployment/myapp/metadata/labels/env" }}
  name: myapp
  namespace: myapp
spec:
  progressDeadlineSeconds: 600
  {{- if index .Values.global "myapp/Deployment/myapp/spec/replicas" }}
  replicas: {{ index .Values.global "myapp/Deployment/myapp/spec/replicas" }}
  {{- end }} # myapp/Deployment/myapp/spec/replicas

  selector:
    matchLabels:
      app: myapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - {{- if index .Values.global "myapp/Deployment/myapp/spec/template/spec/containers/[name=myapp]/args" }}
        args:
        - --debug
        {{- end }} # myapp/Deployment/myapp/spec/template/spec/containers/[name=myapp]/args

        envFrom:
        - configMapRef:
            name: myapp-env
        image: {{ index .Values.global "myapp/Deployment/myapp/spec/template/spec/containers/[name=myapp]/image" }}
        imagePullPolicy: IfNotPresent
        name: myapp
        resources: {}
        terminationMessagePath: /dev/termination-log
      schedulerName: default-scheduler
      securityContext: {}
