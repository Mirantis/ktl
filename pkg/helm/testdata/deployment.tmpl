apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: myapp
  labels:
    app: myapp
    env: {{ .Values.myapp_myapp_deployment_metadata_labels_env }}
spec:
  {{ if .Values.myapp_myapp_deployment_spec_replicas }}
  replicas: {{ .Values.myapp_myapp_deployment_spec_replicas }}
  {{ end }}

  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: myapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: {{ .Values.myapp_myapp_deployment_spec_template_spec_containers_myapp_image }}
        {{ if .Values.myapp_myapp_deployment_spec_template_spec_containers_myapp_args_enabled }}
        args:
        - --debug
        {{ end }}

        envFrom:
        - configMapRef:
            name: myapp-env
        imagePullPolicy: IfNotPresent
        resources: {}
        terminationMessagePath: /dev/termination-log
      schedulerName: default-scheduler
      securityContext: {}
