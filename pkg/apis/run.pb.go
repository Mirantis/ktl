// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: run.proto

package apis

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Pipeline defines the combination of source, filters and output.
type Pipeline struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source specifies the origin of the manifests
	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Filters transform the manifests
	Filters []*Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	// Output specifies the format of the result
	Output        *Output `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	mi := &file_run_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{0}
}

func (x *Pipeline) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Pipeline) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Pipeline) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

type Source struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kubeconfig    *KubeConfigSource      `protobuf:"bytes,1,opt,name=kubeconfig,proto3,oneof" json:"kubeconfig,omitempty"`
	Kustomize     *KustomizeSource       `protobuf:"bytes,2,opt,name=kustomize,proto3,oneof" json:"kustomize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_run_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{1}
}

func (x *Source) GetKubeconfig() *KubeConfigSource {
	if x != nil {
		return x.Kubeconfig
	}
	return nil
}

func (x *Source) GetKustomize() *KustomizeSource {
	if x != nil {
		return x.Kustomize
	}
	return nil
}

type KubeConfigSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *string                `protobuf:"bytes,1,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Clusters      []*ClusterSelector     `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	Resources     []*ResourceMatcher     `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubeConfigSource) Reset() {
	*x = KubeConfigSource{}
	mi := &file_run_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubeConfigSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeConfigSource) ProtoMessage() {}

func (x *KubeConfigSource) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeConfigSource.ProtoReflect.Descriptor instead.
func (*KubeConfigSource) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{2}
}

func (x *KubeConfigSource) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *KubeConfigSource) GetClusters() []*ClusterSelector {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *KubeConfigSource) GetResources() []*ResourceMatcher {
	if x != nil {
		return x.Resources
	}
	return nil
}

type KustomizeSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Clusters      []*ClusterSelector     `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KustomizeSource) Reset() {
	*x = KustomizeSource{}
	mi := &file_run_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KustomizeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeSource) ProtoMessage() {}

func (x *KustomizeSource) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeSource.ProtoReflect.Descriptor instead.
func (*KustomizeSource) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{3}
}

func (x *KustomizeSource) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *KustomizeSource) GetClusters() []*ClusterSelector {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type ClusterSelector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchNames    *PatternSelector       `protobuf:"bytes,1,opt,name=match_names,json=matchNames,proto3,oneof" json:"match_names,omitempty"`
	Alias         *string                `protobuf:"bytes,2,opt,name=alias,proto3,oneof" json:"alias,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterSelector) Reset() {
	*x = ClusterSelector{}
	mi := &file_run_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSelector) ProtoMessage() {}

func (x *ClusterSelector) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSelector.ProtoReflect.Descriptor instead.
func (*ClusterSelector) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterSelector) GetMatchNames() *PatternSelector {
	if x != nil {
		return x.MatchNames
	}
	return nil
}

func (x *ClusterSelector) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

type ResourceMatcher struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MatchNames        *PatternSelector       `protobuf:"bytes,1,opt,name=match_names,json=matchNames,proto3,oneof" json:"match_names,omitempty"`
	MatchNamespaces   *PatternSelector       `protobuf:"bytes,2,opt,name=match_namespaces,json=matchNamespaces,proto3,oneof" json:"match_namespaces,omitempty"`
	MatchApiResources *PatternSelector       `protobuf:"bytes,3,opt,name=match_api_resources,json=matchApiResources,proto3,oneof" json:"match_api_resources,omitempty"`
	LabelSelectors    []string               `protobuf:"bytes,4,rep,name=label_selectors,json=labelSelectors,proto3" json:"label_selectors,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResourceMatcher) Reset() {
	*x = ResourceMatcher{}
	mi := &file_run_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMatcher) ProtoMessage() {}

func (x *ResourceMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMatcher.ProtoReflect.Descriptor instead.
func (*ResourceMatcher) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceMatcher) GetMatchNames() *PatternSelector {
	if x != nil {
		return x.MatchNames
	}
	return nil
}

func (x *ResourceMatcher) GetMatchNamespaces() *PatternSelector {
	if x != nil {
		return x.MatchNamespaces
	}
	return nil
}

func (x *ResourceMatcher) GetMatchApiResources() *PatternSelector {
	if x != nil {
		return x.MatchApiResources
	}
	return nil
}

func (x *ResourceMatcher) GetLabelSelectors() []string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

type PatternSelector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Include       []string               `protobuf:"bytes,1,rep,name=include,proto3" json:"include,omitempty"`
	Exclude       []string               `protobuf:"bytes,2,rep,name=exclude,proto3" json:"exclude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatternSelector) Reset() {
	*x = PatternSelector{}
	mi := &file_run_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatternSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatternSelector) ProtoMessage() {}

func (x *PatternSelector) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatternSelector.ProtoReflect.Descriptor instead.
func (*PatternSelector) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{6}
}

func (x *PatternSelector) GetInclude() []string {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *PatternSelector) GetExclude() []string {
	if x != nil {
		return x.Exclude
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skip          *SkipFilter            `protobuf:"bytes,1,opt,name=skip,proto3,oneof" json:"skip,omitempty"`
	Starlark      *StarlarkFilter        `protobuf:"bytes,2,opt,name=starlark,proto3,oneof" json:"starlark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_run_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{7}
}

func (x *Filter) GetSkip() *SkipFilter {
	if x != nil {
		return x.Skip
	}
	return nil
}

func (x *Filter) GetStarlark() *StarlarkFilter {
	if x != nil {
		return x.Starlark
	}
	return nil
}

type StarlarkFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        string                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StarlarkFilter) Reset() {
	*x = StarlarkFilter{}
	mi := &file_run_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarlarkFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarlarkFilter) ProtoMessage() {}

func (x *StarlarkFilter) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarlarkFilter.ProtoReflect.Descriptor instead.
func (*StarlarkFilter) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{8}
}

func (x *StarlarkFilter) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type SkipFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     *ResourceMatcher       `protobuf:"bytes,1,opt,name=resources,proto3,oneof" json:"resources,omitempty"`
	Fields        []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkipFilter) Reset() {
	*x = SkipFilter{}
	mi := &file_run_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkipFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipFilter) ProtoMessage() {}

func (x *SkipFilter) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipFilter.ProtoReflect.Descriptor instead.
func (*SkipFilter) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{9}
}

func (x *SkipFilter) GetResources() *ResourceMatcher {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *SkipFilter) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ResourceSelector struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Group              *string                `protobuf:"bytes,1,opt,name=group,proto3,oneof" json:"group,omitempty"`
	Version            *string                `protobuf:"bytes,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Kind               *string                `protobuf:"bytes,3,opt,name=kind,proto3,oneof" json:"kind,omitempty"`
	Name               *string                `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Namespace          *string                `protobuf:"bytes,5,opt,name=namespace,proto3,oneof" json:"namespace,omitempty"`
	AnnotationSelector *string                `protobuf:"bytes,6,opt,name=annotation_selector,json=annotationSelector,proto3,oneof" json:"annotation_selector,omitempty"`
	LabelSelector      *string                `protobuf:"bytes,7,opt,name=label_selector,json=labelSelector,proto3,oneof" json:"label_selector,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResourceSelector) Reset() {
	*x = ResourceSelector{}
	mi := &file_run_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSelector) ProtoMessage() {}

func (x *ResourceSelector) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSelector.ProtoReflect.Descriptor instead.
func (*ResourceSelector) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceSelector) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *ResourceSelector) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ResourceSelector) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *ResourceSelector) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceSelector) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ResourceSelector) GetAnnotationSelector() string {
	if x != nil && x.AnnotationSelector != nil {
		return *x.AnnotationSelector
	}
	return ""
}

func (x *ResourceSelector) GetLabelSelector() string {
	if x != nil && x.LabelSelector != nil {
		return *x.LabelSelector
	}
	return ""
}

type Output struct {
	state               protoimpl.MessageState     `protogen:"open.v1"`
	Kustomize           *KustomizeOutput           `protobuf:"bytes,1,opt,name=kustomize,proto3,oneof" json:"kustomize,omitempty"`
	KustomizeComponents *KustomizeComponentsOutput `protobuf:"bytes,2,opt,name=kustomize_components,json=kustomizeComponents,proto3,oneof" json:"kustomize_components,omitempty"`
	HelmChart           *HelmChartOutput           `protobuf:"bytes,3,opt,name=helm_chart,json=helmChart,proto3,oneof" json:"helm_chart,omitempty"`
	Csv                 *ColumnarFileOutput        `protobuf:"bytes,4,opt,name=csv,proto3,oneof" json:"csv,omitempty"`
	Table               *ColumnarFileOutput        `protobuf:"bytes,5,opt,name=table,proto3,oneof" json:"table,omitempty"`
	McpTool             *MCPToolOutput             `protobuf:"bytes,6,opt,name=mcp_tool,json=mcpTool,proto3,oneof" json:"mcp_tool,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Output) Reset() {
	*x = Output{}
	mi := &file_run_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{11}
}

func (x *Output) GetKustomize() *KustomizeOutput {
	if x != nil {
		return x.Kustomize
	}
	return nil
}

func (x *Output) GetKustomizeComponents() *KustomizeComponentsOutput {
	if x != nil {
		return x.KustomizeComponents
	}
	return nil
}

func (x *Output) GetHelmChart() *HelmChartOutput {
	if x != nil {
		return x.HelmChart
	}
	return nil
}

func (x *Output) GetCsv() *ColumnarFileOutput {
	if x != nil {
		return x.Csv
	}
	return nil
}

func (x *Output) GetTable() *ColumnarFileOutput {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *Output) GetMcpTool() *MCPToolOutput {
	if x != nil {
		return x.McpTool
	}
	return nil
}

type KustomizeOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KustomizeOutput) Reset() {
	*x = KustomizeOutput{}
	mi := &file_run_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KustomizeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeOutput) ProtoMessage() {}

func (x *KustomizeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeOutput.ProtoReflect.Descriptor instead.
func (*KustomizeOutput) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{12}
}

type KustomizeComponentsOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KustomizeComponentsOutput) Reset() {
	*x = KustomizeComponentsOutput{}
	mi := &file_run_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KustomizeComponentsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeComponentsOutput) ProtoMessage() {}

func (x *KustomizeComponentsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeComponentsOutput.ProtoReflect.Descriptor instead.
func (*KustomizeComponentsOutput) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{13}
}

type HelmChartOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelmChartOutput) Reset() {
	*x = HelmChartOutput{}
	mi := &file_run_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmChartOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmChartOutput) ProtoMessage() {}

func (x *HelmChartOutput) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmChartOutput.ProtoReflect.Descriptor instead.
func (*HelmChartOutput) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{14}
}

func (x *HelmChartOutput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmChartOutput) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ColumnarFileOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *string                `protobuf:"bytes,1,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Columns       []*ColumnOutput        `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnarFileOutput) Reset() {
	*x = ColumnarFileOutput{}
	mi := &file_run_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnarFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnarFileOutput) ProtoMessage() {}

func (x *ColumnarFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnarFileOutput.ProtoReflect.Descriptor instead.
func (*ColumnarFileOutput) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{15}
}

func (x *ColumnarFileOutput) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *ColumnarFileOutput) GetColumns() []*ColumnOutput {
	if x != nil {
		return x.Columns
	}
	return nil
}

type MCPToolOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Columns       []*ColumnOutput        `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MCPToolOutput) Reset() {
	*x = MCPToolOutput{}
	mi := &file_run_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MCPToolOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCPToolOutput) ProtoMessage() {}

func (x *MCPToolOutput) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCPToolOutput.ProtoReflect.Descriptor instead.
func (*MCPToolOutput) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{16}
}

func (x *MCPToolOutput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MCPToolOutput) GetColumns() []*ColumnOutput {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ColumnOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   *string                `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Field         *string                `protobuf:"bytes,3,opt,name=field,proto3,oneof" json:"field,omitempty"`
	Text          *string                `protobuf:"bytes,4,opt,name=text,proto3,oneof" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnOutput) Reset() {
	*x = ColumnOutput{}
	mi := &file_run_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOutput) ProtoMessage() {}

func (x *ColumnOutput) ProtoReflect() protoreflect.Message {
	mi := &file_run_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOutput.ProtoReflect.Descriptor instead.
func (*ColumnOutput) Descriptor() ([]byte, []int) {
	return file_run_proto_rawDescGZIP(), []int{17}
}

func (x *ColumnOutput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnOutput) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ColumnOutput) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *ColumnOutput) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

var File_run_proto protoreflect.FileDescriptor

const file_run_proto_rawDesc = "" +
	"\n" +
	"\trun.proto\x12\x04apis\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\"~\n" +
	"\bPipeline\x12$\n" +
	"\x06source\x18\x01 \x01(\v2\f.apis.SourceR\x06source\x12&\n" +
	"\afilters\x18\x02 \x03(\v2\f.apis.FilterR\afilters\x12$\n" +
	"\x06output\x18\x03 \x01(\v2\f.apis.OutputR\x06output\"\x9c\x01\n" +
	"\x06Source\x12;\n" +
	"\n" +
	"kubeconfig\x18\x01 \x01(\v2\x16.apis.KubeConfigSourceH\x00R\n" +
	"kubeconfig\x88\x01\x01\x128\n" +
	"\tkustomize\x18\x02 \x01(\v2\x15.apis.KustomizeSourceH\x01R\tkustomize\x88\x01\x01B\r\n" +
	"\v_kubeconfigB\f\n" +
	"\n" +
	"_kustomize\"\x9c\x01\n" +
	"\x10KubeConfigSource\x12\x17\n" +
	"\x04path\x18\x01 \x01(\tH\x00R\x04path\x88\x01\x01\x121\n" +
	"\bclusters\x18\x02 \x03(\v2\x15.apis.ClusterSelectorR\bclusters\x123\n" +
	"\tresources\x18\x03 \x03(\v2\x15.apis.ResourceMatcherR\tresourcesB\a\n" +
	"\x05_path\"X\n" +
	"\x0fKustomizeSource\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x121\n" +
	"\bclusters\x18\x02 \x03(\v2\x15.apis.ClusterSelectorR\bclusters\"\x83\x01\n" +
	"\x0fClusterSelector\x12;\n" +
	"\vmatch_names\x18\x01 \x01(\v2\x15.apis.PatternSelectorH\x00R\n" +
	"matchNames\x88\x01\x01\x12\x19\n" +
	"\x05alias\x18\x02 \x01(\tH\x01R\x05alias\x88\x01\x01B\x0e\n" +
	"\f_match_namesB\b\n" +
	"\x06_alias\"\xc7\x02\n" +
	"\x0fResourceMatcher\x12;\n" +
	"\vmatch_names\x18\x01 \x01(\v2\x15.apis.PatternSelectorH\x00R\n" +
	"matchNames\x88\x01\x01\x12E\n" +
	"\x10match_namespaces\x18\x02 \x01(\v2\x15.apis.PatternSelectorH\x01R\x0fmatchNamespaces\x88\x01\x01\x12J\n" +
	"\x13match_api_resources\x18\x03 \x01(\v2\x15.apis.PatternSelectorH\x02R\x11matchApiResources\x88\x01\x01\x12'\n" +
	"\x0flabel_selectors\x18\x04 \x03(\tR\x0elabelSelectorsB\x0e\n" +
	"\f_match_namesB\x13\n" +
	"\x11_match_namespacesB\x16\n" +
	"\x14_match_api_resources\"E\n" +
	"\x0fPatternSelector\x12\x18\n" +
	"\ainclude\x18\x01 \x03(\tR\ainclude\x12\x18\n" +
	"\aexclude\x18\x02 \x03(\tR\aexclude\"\x80\x01\n" +
	"\x06Filter\x12)\n" +
	"\x04skip\x18\x01 \x01(\v2\x10.apis.SkipFilterH\x00R\x04skip\x88\x01\x01\x125\n" +
	"\bstarlark\x18\x02 \x01(\v2\x14.apis.StarlarkFilterH\x01R\bstarlark\x88\x01\x01B\a\n" +
	"\x05_skipB\v\n" +
	"\t_starlark\"(\n" +
	"\x0eStarlarkFilter\x12\x16\n" +
	"\x06script\x18\x01 \x01(\tR\x06script\"l\n" +
	"\n" +
	"SkipFilter\x128\n" +
	"\tresources\x18\x01 \x01(\v2\x15.apis.ResourceMatcherH\x00R\tresources\x88\x01\x01\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fieldsB\f\n" +
	"\n" +
	"_resources\"\xe4\x02\n" +
	"\x10ResourceSelector\x12\x19\n" +
	"\x05group\x18\x01 \x01(\tH\x00R\x05group\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x02 \x01(\tH\x01R\aversion\x88\x01\x01\x12\x17\n" +
	"\x04kind\x18\x03 \x01(\tH\x02R\x04kind\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tH\x03R\x04name\x88\x01\x01\x12!\n" +
	"\tnamespace\x18\x05 \x01(\tH\x04R\tnamespace\x88\x01\x01\x124\n" +
	"\x13annotation_selector\x18\x06 \x01(\tH\x05R\x12annotationSelector\x88\x01\x01\x12*\n" +
	"\x0elabel_selector\x18\a \x01(\tH\x06R\rlabelSelector\x88\x01\x01B\b\n" +
	"\x06_groupB\n" +
	"\n" +
	"\b_versionB\a\n" +
	"\x05_kindB\a\n" +
	"\x05_nameB\f\n" +
	"\n" +
	"_namespaceB\x16\n" +
	"\x14_annotation_selectorB\x11\n" +
	"\x0f_label_selector\"\xc6\x03\n" +
	"\x06Output\x128\n" +
	"\tkustomize\x18\x01 \x01(\v2\x15.apis.KustomizeOutputH\x00R\tkustomize\x88\x01\x01\x12W\n" +
	"\x14kustomize_components\x18\x02 \x01(\v2\x1f.apis.KustomizeComponentsOutputH\x01R\x13kustomizeComponents\x88\x01\x01\x129\n" +
	"\n" +
	"helm_chart\x18\x03 \x01(\v2\x15.apis.HelmChartOutputH\x02R\thelmChart\x88\x01\x01\x12/\n" +
	"\x03csv\x18\x04 \x01(\v2\x18.apis.ColumnarFileOutputH\x03R\x03csv\x88\x01\x01\x123\n" +
	"\x05table\x18\x05 \x01(\v2\x18.apis.ColumnarFileOutputH\x04R\x05table\x88\x01\x01\x123\n" +
	"\bmcp_tool\x18\x06 \x01(\v2\x13.apis.MCPToolOutputH\x05R\amcpTool\x88\x01\x01B\f\n" +
	"\n" +
	"_kustomizeB\x17\n" +
	"\x15_kustomize_componentsB\r\n" +
	"\v_helm_chartB\x06\n" +
	"\x04_csvB\b\n" +
	"\x06_tableB\v\n" +
	"\t_mcp_tool\"\x11\n" +
	"\x0fKustomizeOutput\"\x1b\n" +
	"\x19KustomizeComponentsOutput\"?\n" +
	"\x0fHelmChartOutput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"d\n" +
	"\x12ColumnarFileOutput\x12\x17\n" +
	"\x04path\x18\x01 \x01(\tH\x00R\x04path\x88\x01\x01\x12,\n" +
	"\acolumns\x18\x02 \x03(\v2\x12.apis.ColumnOutputR\acolumnsB\a\n" +
	"\x05_path\"_\n" +
	"\rMCPToolOutput\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12,\n" +
	"\acolumns\x18\x02 \x03(\v2\x12.apis.ColumnOutputR\acolumns\"\xa0\x01\n" +
	"\fColumnOutput\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x02 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x19\n" +
	"\x05field\x18\x03 \x01(\tH\x01R\x05field\x88\x01\x01\x12\x17\n" +
	"\x04text\x18\x04 \x01(\tH\x02R\x04text\x88\x01\x01B\x0e\n" +
	"\f_descriptionB\b\n" +
	"\x06_fieldB\a\n" +
	"\x05_text2H\n" +
	"\x03KTL\x12A\n" +
	"\x06Config\x12\x16.google.protobuf.Empty\x1a\x0e.apis.Pipeline\"\x0f\x82\xd3\xe4\x93\x02\t\x12\a/configB\"Z github.com/Mirantis/ktl/pkg/apisb\x06proto3"

var (
	file_run_proto_rawDescOnce sync.Once
	file_run_proto_rawDescData []byte
)

func file_run_proto_rawDescGZIP() []byte {
	file_run_proto_rawDescOnce.Do(func() {
		file_run_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_run_proto_rawDesc), len(file_run_proto_rawDesc)))
	})
	return file_run_proto_rawDescData
}

var file_run_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_run_proto_goTypes = []any{
	(*Pipeline)(nil),                  // 0: apis.Pipeline
	(*Source)(nil),                    // 1: apis.Source
	(*KubeConfigSource)(nil),          // 2: apis.KubeConfigSource
	(*KustomizeSource)(nil),           // 3: apis.KustomizeSource
	(*ClusterSelector)(nil),           // 4: apis.ClusterSelector
	(*ResourceMatcher)(nil),           // 5: apis.ResourceMatcher
	(*PatternSelector)(nil),           // 6: apis.PatternSelector
	(*Filter)(nil),                    // 7: apis.Filter
	(*StarlarkFilter)(nil),            // 8: apis.StarlarkFilter
	(*SkipFilter)(nil),                // 9: apis.SkipFilter
	(*ResourceSelector)(nil),          // 10: apis.ResourceSelector
	(*Output)(nil),                    // 11: apis.Output
	(*KustomizeOutput)(nil),           // 12: apis.KustomizeOutput
	(*KustomizeComponentsOutput)(nil), // 13: apis.KustomizeComponentsOutput
	(*HelmChartOutput)(nil),           // 14: apis.HelmChartOutput
	(*ColumnarFileOutput)(nil),        // 15: apis.ColumnarFileOutput
	(*MCPToolOutput)(nil),             // 16: apis.MCPToolOutput
	(*ColumnOutput)(nil),              // 17: apis.ColumnOutput
	(*emptypb.Empty)(nil),             // 18: google.protobuf.Empty
}
var file_run_proto_depIdxs = []int32{
	1,  // 0: apis.Pipeline.source:type_name -> apis.Source
	7,  // 1: apis.Pipeline.filters:type_name -> apis.Filter
	11, // 2: apis.Pipeline.output:type_name -> apis.Output
	2,  // 3: apis.Source.kubeconfig:type_name -> apis.KubeConfigSource
	3,  // 4: apis.Source.kustomize:type_name -> apis.KustomizeSource
	4,  // 5: apis.KubeConfigSource.clusters:type_name -> apis.ClusterSelector
	5,  // 6: apis.KubeConfigSource.resources:type_name -> apis.ResourceMatcher
	4,  // 7: apis.KustomizeSource.clusters:type_name -> apis.ClusterSelector
	6,  // 8: apis.ClusterSelector.match_names:type_name -> apis.PatternSelector
	6,  // 9: apis.ResourceMatcher.match_names:type_name -> apis.PatternSelector
	6,  // 10: apis.ResourceMatcher.match_namespaces:type_name -> apis.PatternSelector
	6,  // 11: apis.ResourceMatcher.match_api_resources:type_name -> apis.PatternSelector
	9,  // 12: apis.Filter.skip:type_name -> apis.SkipFilter
	8,  // 13: apis.Filter.starlark:type_name -> apis.StarlarkFilter
	5,  // 14: apis.SkipFilter.resources:type_name -> apis.ResourceMatcher
	12, // 15: apis.Output.kustomize:type_name -> apis.KustomizeOutput
	13, // 16: apis.Output.kustomize_components:type_name -> apis.KustomizeComponentsOutput
	14, // 17: apis.Output.helm_chart:type_name -> apis.HelmChartOutput
	15, // 18: apis.Output.csv:type_name -> apis.ColumnarFileOutput
	15, // 19: apis.Output.table:type_name -> apis.ColumnarFileOutput
	16, // 20: apis.Output.mcp_tool:type_name -> apis.MCPToolOutput
	17, // 21: apis.ColumnarFileOutput.columns:type_name -> apis.ColumnOutput
	17, // 22: apis.MCPToolOutput.columns:type_name -> apis.ColumnOutput
	18, // 23: apis.KTL.Config:input_type -> google.protobuf.Empty
	0,  // 24: apis.KTL.Config:output_type -> apis.Pipeline
	24, // [24:25] is the sub-list for method output_type
	23, // [23:24] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_run_proto_init() }
func file_run_proto_init() {
	if File_run_proto != nil {
		return
	}
	file_run_proto_msgTypes[1].OneofWrappers = []any{}
	file_run_proto_msgTypes[2].OneofWrappers = []any{}
	file_run_proto_msgTypes[4].OneofWrappers = []any{}
	file_run_proto_msgTypes[5].OneofWrappers = []any{}
	file_run_proto_msgTypes[7].OneofWrappers = []any{}
	file_run_proto_msgTypes[9].OneofWrappers = []any{}
	file_run_proto_msgTypes[10].OneofWrappers = []any{}
	file_run_proto_msgTypes[11].OneofWrappers = []any{}
	file_run_proto_msgTypes[15].OneofWrappers = []any{}
	file_run_proto_msgTypes[17].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_run_proto_rawDesc), len(file_run_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_run_proto_goTypes,
		DependencyIndexes: file_run_proto_depIdxs,
		MessageInfos:      file_run_proto_msgTypes,
	}.Build()
	File_run_proto = out.File
	file_run_proto_goTypes = nil
	file_run_proto_depIdxs = nil
}
