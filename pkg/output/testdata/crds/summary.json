{
  "ClusterTemplate[]": "ClusterTemplate is the Schema for the clustertemplates API",
  "ClusterTemplate[].apiVersion": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\nMust be a string.",
  "ClusterTemplate[].kind": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\nMust be a string.",
  "ClusterTemplate[].metadata": "",
  "ClusterTemplate[].spec": "ClusterTemplateSpec defines the desired state of ClusterTemplate",
  "ClusterTemplate[].spec.helm": "HelmSpec references a Helm chart representing the KCM template\nRequired.",
  "ClusterTemplate[].spec.helm.chartRef": "ChartRef is a reference to a source controller resource containing the\nHelm chart representing the template.",
  "ClusterTemplate[].spec.helm.chartRef.apiVersion": "APIVersion of the referent.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartRef.kind": "Kind of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartRef.namespace": "Namespace of the referent, defaults to the namespace of the Kubernetes\nresource object that contains the reference.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource": "ChartSource is a source of a Helm chart representing the template.",
  "ClusterTemplate[].spec.helm.chartSource.deploymentType": "DeploymentType is the type of the deployment. This field is ignored,\nwhen ResourceSpec is used as part of Helm chart configuration.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.localSourceRef": "LocalSourceRef is the local source of the kustomize manifest.",
  "ClusterTemplate[].spec.helm.chartSource.localSourceRef.kind": "Kind is the kind of the local source.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.localSourceRef.name": "Name is the name of the local source.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.localSourceRef.namespace": "Namespace is the namespace of the local source. Cross-namespace references\nare only allowed when the Kind is one of [github.com/fluxcd/source-controller/api/v1.GitRepository],\n[github.com/fluxcd/source-controller/api/v1.Bucket] or [github.com/fluxcd/source-controller/api/v1.OCIRepository].\nIf the Kind is ConfigMap or Secret, the namespace will be ignored.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.path": "Path to the directory containing the resource manifest.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec": "RemoteSourceSpec is the remote source of the kustomize manifest.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket": "Bucket is the definition of bucket source.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.bucketName": "BucketName is the name of the object storage bucket.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nbucket. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `generic` provider.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.endpoint": "Endpoint is the object storage address the BucketName is located at.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.insecure": "Insecure allows connecting to a non-TLS HTTP Endpoint.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.interval": "Interval at which the Bucket Endpoint is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.prefix": "Prefix to use for server-side filtering of files in the Bucket.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.provider": "Provider of the object storage bucket.\nDefaults to 'generic', which expects an S3 (API) compatible object\nstorage.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Bucket server.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.region": "Region of the Endpoint where the BucketName is located in.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the Bucket.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts": "STS specifies the required configuration to use a Security Token\nService for fetching temporary credentials to authenticate in a\nBucket provider.\n\nThis field is only supported for the `aws` and `generic` providers.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nSTS endpoint. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `ldap` provider.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.endpoint": "Endpoint is the HTTP/S endpoint of the Security Token Service from\nwhere temporary credentials will be fetched.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.provider": "Provider of the Security Token Service.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the STS endpoint. This Secret must contain the fields `username`\nand `password` and is supported only for the `ldap` provider.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.suspend": "Suspend tells the controller to suspend the reconciliation of this\nBucket.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.timeout": "Timeout for fetch operations, defaults to 60s.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git": "Git is the definition of git repository source.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include": "Include specifies a list of GitRepository resources which Artifacts\nshould be included in the Artifact produced for this GitRepository.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[]": "GitRepositoryInclude specifies a local reference to a GitRepository which\nArtifact (sub-)contents must be included, and where they should be placed.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].fromPath": "FromPath specifies the path to copy contents from, defaults to the root\nof the Artifact.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].repository": "GitRepositoryRef specifies the GitRepository which Artifact contents\nmust be included.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].repository.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].toPath": "ToPath specifies the path to copy contents to, defaults to the name of\nthe GitRepositoryRef.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.interval": "Interval at which the GitRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.provider": "Provider used for authentication, can be 'azure', 'github', 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Git server.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.recurseSubmodules": "RecurseSubmodules enables the initialization of all submodules within\nthe GitRepository as cloned from the URL, using their default settings.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref": "Reference specifies the Git reference to resolve and monitor for\nchanges, defaults to the 'master' branch.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.branch": "Branch to check out, defaults to 'master' if no other field is defined.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.commit": "Commit SHA to check out, takes precedence over all reference fields.\n\nThis can be combined with Branch to shallow clone the branch, in which\nthe commit is expected to exist.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.name": "Name of the reference to check out; takes precedence over Branch, Tag and SemVer.\n\nIt must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description\nExamples: \"refs/heads/main\", \"refs/tags/v0.1.0\", \"refs/pull/420/head\", \"refs/merge-requests/1/head\"\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.semver": "SemVer tag expression to check out, takes precedence over Tag.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.tag": "Tag to check out, takes precedence over Branch.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.secretRef": "SecretRef specifies the Secret containing authentication credentials for\nthe GitRepository.\nFor HTTPS repositories the Secret must contain 'username' and 'password'\nfields for basic auth or 'bearerToken' field for token auth.\nFor SSH repositories the Secret must contain 'identity'\nand 'known_hosts' fields.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.sparseCheckout": "SparseCheckout specifies a list of directories to checkout when cloning\nthe repository. If specified, only these directories are included in the\nArtifact produced for this GitRepository.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.sparseCheckout[]": "Must be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.suspend": "Suspend tells the controller to suspend the reconciliation of this\nGitRepository.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.timeout": "Timeout for Git operations like cloning, defaults to 60s.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.url": "URL specifies the Git repository URL, it can be an HTTP/S or SSH address.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify": "Verification specifies the configuration to verify the Git commit\nsignature(s).",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify.mode": "Mode specifies which Git object(s) should be verified.\n\nThe variants \"head\" and \"HEAD\" both imply the same thing, i.e. verify\nthe commit that the HEAD of the Git repository points to. The variant\n\"head\" solely exists to ensure backwards compatibility.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify.secretRef": "SecretRef specifies the Secret containing the public keys of trusted Git\nauthors.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci": "OCI is the definition of OCI repository source.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nregistry. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.insecure": "Insecure allows connecting to a non-TLS HTTP container registry.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.interval": "Interval at which the OCIRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.layerSelector": "LayerSelector specifies which layer should be extracted from the OCI artifact.\nWhen not specified, the first layer found in the artifact is selected.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.layerSelector.mediaType": "MediaType specifies the OCI media type of the layer\nwhich should be extracted from the OCI Artifact. The\nfirst layer matching this type is selected.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.layerSelector.operation": "Operation specifies how the selected layer should be processed.\nBy default, the layer compressed content is extracted to storage.\nWhen the operation is set to 'copy', the layer compressed content\nis persisted to storage as it is.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.provider": "The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the container registry.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref": "The OCI reference to pull and monitor for changes,\ndefaults to the latest tag.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.digest": "Digest is the image digest to pull, takes precedence over SemVer.\nThe value should be in the format 'sha256:\u003cHASH\u003e'.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.semver": "SemVer is the range of tags to pull selecting the latest within\nthe range, takes precedence over Tag.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.semverFilter": "SemverFilter is a regex pattern to filter the tags within the SemVer range.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.tag": "Tag is the image tag to pull, defaults to latest.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.secretRef": "SecretRef contains the secret name containing the registry login\ncredentials to resolve image metadata.\nThe secret must be of type kubernetes.io/dockerconfigjson.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.serviceAccountName": "ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate\nthe image pull if the service account has attached pull secrets. For more information:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.suspend": "This flag tells the controller to suspend the reconciliation of this source.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.timeout": "The timeout for remote OCI Repository operations like pulling, defaults to 60s.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.url": "URL is a reference to an OCI artifact repository hosted\non a remote container registry.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify": "Verify contains the secret name containing the trusted public keys\nused to verify the signature and specifies which provider to use to check\nwhether OCI image is authentic.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity": "MatchOIDCIdentity specifies the identity matching criteria to use\nwhile verifying an OCI artifact which was signed using Cosign keyless\nsigning. The artifact's identity is deemed to be verified if any of the\nspecified matchers match against the identity.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity[]": "OIDCIdentityMatch specifies options for verifying the certificate identity,\ni.e. the issuer and the subject of the certificate.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity[].issuer": "Issuer specifies the regex pattern to match against to verify\nthe OIDC issuer in the Fulcio certificate. The pattern must be a\nvalid Go regular expression.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity[].subject": "Subject specifies the regex pattern to match against to verify\nthe identity subject in the Fulcio certificate. The pattern must\nbe a valid Go regular expression.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.provider": "Provider specifies the technology used to sign the OCI Artifact.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.secretRef": "SecretRef specifies the Kubernetes Secret containing the\ntrusted public keys.",
  "ClusterTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec": "ChartSpec defines the desired state of the HelmChart to be created by the controller",
  "ClusterTemplate[].spec.helm.chartSpec.chart": "Chart is the name or path the Helm chart is available at in the\nSourceRef.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.ignoreMissingValuesFiles": "IgnoreMissingValuesFiles controls whether to silently ignore missing values\nfiles rather than failing.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSpec.interval": "Interval at which the HelmChart SourceRef is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.reconcileStrategy": "ReconcileStrategy determines what enables the creation of a new artifact.\nValid values are ('ChartVersion', 'Revision').\nSee the documentation of the values for an explanation on their behavior.\nDefaults to ChartVersion when omitted.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSpec.sourceRef": "SourceRef is the reference to the Source the chart is available at.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.sourceRef.apiVersion": "APIVersion of the referent.\nMust be a string.",
  "ClusterTemplate[].spec.helm.chartSpec.sourceRef.kind": "Kind of the referent, valid values are ('HelmRepository', 'GitRepository',\n'Bucket').\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.sourceRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.suspend": "Suspend tells the controller to suspend the reconciliation of this\nsource.\nMust be a boolean.",
  "ClusterTemplate[].spec.helm.chartSpec.valuesFiles": "ValuesFiles is an alternative list of values files to use as the chart\nvalues (values.yaml is not included by default), expected to be a\nrelative path in the SourceRef.\nValues files are merged in the order of this list with the last file\noverriding the first. Ignored when omitted.",
  "ClusterTemplate[].spec.helm.chartSpec.valuesFiles[]": "Must be a string.",
  "ClusterTemplate[].spec.helm.chartSpec.verify": "Verify contains the secret name containing the trusted public keys\nused to verify the signature and specifies which provider to use to check\nwhether OCI image is authentic.\nThis field is only supported when using HelmRepository source with spec.type 'oci'.\nChart dependencies, which are not bundled in the umbrella chart artifact, are not verified.",
  "ClusterTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity": "MatchOIDCIdentity specifies the identity matching criteria to use\nwhile verifying an OCI artifact which was signed using Cosign keyless\nsigning. The artifact's identity is deemed to be verified if any of the\nspecified matchers match against the identity.",
  "ClusterTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity[]": "OIDCIdentityMatch specifies options for verifying the certificate identity,\ni.e. the issuer and the subject of the certificate.",
  "ClusterTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity[].issuer": "Issuer specifies the regex pattern to match against to verify\nthe OIDC issuer in the Fulcio certificate. The pattern must be a\nvalid Go regular expression.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity[].subject": "Subject specifies the regex pattern to match against to verify\nthe identity subject in the Fulcio certificate. The pattern must\nbe a valid Go regular expression.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.verify.provider": "Provider specifies the technology used to sign the OCI Artifact.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.verify.secretRef": "SecretRef specifies the Kubernetes Secret containing the\ntrusted public keys.",
  "ClusterTemplate[].spec.helm.chartSpec.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].spec.helm.chartSpec.version": "Version is the chart version semver expression, ignored for charts from\nGitRepository and Bucket sources. Defaults to latest when omitted.\nMust be a string.",
  "ClusterTemplate[].spec.k8sVersion": "Kubernetes exact version in the SemVer format provided by this ClusterTemplate.\nMust be a string.",
  "ClusterTemplate[].spec.providerContracts": "Holds key-value pairs with compatibility [contract versions],\nwhere the key is the name of the provider,\nand the value is the provider contract version\nrequired to be supported by the provider.\n\n[contract versions]: https://cluster-api.sigs.k8s.io/developer/providers/contracts",
  "ClusterTemplate[].spec.providers": "Providers represent required CAPI providers.\nShould be set if not present in the Helm chart metadata.",
  "ClusterTemplate[].spec.providers[]": "Must be a string.",
  "ClusterTemplate[].status": "ClusterTemplateStatus defines the observed state of ClusterTemplate",
  "ClusterTemplate[].status.chartRef": "ChartRef is a reference to a source controller resource containing the\nHelm chart representing the template.",
  "ClusterTemplate[].status.chartRef.apiVersion": "APIVersion of the referent.\nMust be a string.",
  "ClusterTemplate[].status.chartRef.kind": "Kind of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].status.chartRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ClusterTemplate[].status.chartRef.namespace": "Namespace of the referent, defaults to the namespace of the Kubernetes\nresource object that contains the reference.\nMust be a string.",
  "ClusterTemplate[].status.chartVersion": "ChartVersion represents the version of the Helm Chart associated with this template.\nMust be a string.",
  "ClusterTemplate[].status.config": "Config demonstrates available parameters for template customization,\nthat can be used when creating ClusterDeployment objects.\nMust be a .",
  "ClusterTemplate[].status.description": "Description contains information about the template.\nMust be a string.",
  "ClusterTemplate[].status.k8sVersion": "Kubernetes exact version in the SemVer format provided by this ClusterTemplate.\nMust be a string.",
  "ClusterTemplate[].status.observedGeneration": "ObservedGeneration is the last observed generation.\nMust be a integer.",
  "ClusterTemplate[].status.providerContracts": "Holds key-value pairs with compatibility [contract versions],\nwhere the key is the name of the provider,\nand the value is the provider contract version\nrequired to be supported by the provider.\n\n[contract versions]: https://cluster-api.sigs.k8s.io/developer/providers/contracts",
  "ClusterTemplate[].status.providers": "Providers represent required CAPI providers.",
  "ClusterTemplate[].status.providers[]": "Must be a string.",
  "ClusterTemplate[].status.valid": "Valid indicates whether the template passed validation or not.\nMust be a boolean.\nRequired.",
  "ClusterTemplate[].status.validationError": "ValidationError provides information regarding issues encountered during template validation.\nMust be a string.",
  "ServiceTemplate[]": "ServiceTemplate is the Schema for the servicetemplates API",
  "ServiceTemplate[].apiVersion": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\nMust be a string.",
  "ServiceTemplate[].kind": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\nMust be a string.",
  "ServiceTemplate[].metadata": "",
  "ServiceTemplate[].spec": "ServiceTemplateSpec defines the desired state of ServiceTemplate",
  "ServiceTemplate[].spec.helm": "Helm contains the Helm chart information for the template.",
  "ServiceTemplate[].spec.helm.chartRef": "ChartRef is a reference to a source controller resource containing the\nHelm chart representing the template.",
  "ServiceTemplate[].spec.helm.chartRef.apiVersion": "APIVersion of the referent.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartRef.kind": "Kind of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartRef.namespace": "Namespace of the referent, defaults to the namespace of the Kubernetes\nresource object that contains the reference.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource": "ChartSource is a source of a Helm chart representing the template.",
  "ServiceTemplate[].spec.helm.chartSource.deploymentType": "DeploymentType is the type of the deployment. This field is ignored,\nwhen ResourceSpec is used as part of Helm chart configuration.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.localSourceRef": "LocalSourceRef is the local source of the kustomize manifest.",
  "ServiceTemplate[].spec.helm.chartSource.localSourceRef.kind": "Kind is the kind of the local source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.localSourceRef.name": "Name is the name of the local source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.localSourceRef.namespace": "Namespace is the namespace of the local source. Cross-namespace references\nare only allowed when the Kind is one of [github.com/fluxcd/source-controller/api/v1.GitRepository],\n[github.com/fluxcd/source-controller/api/v1.Bucket] or [github.com/fluxcd/source-controller/api/v1.OCIRepository].\nIf the Kind is ConfigMap or Secret, the namespace will be ignored.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.path": "Path to the directory containing the resource manifest.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec": "RemoteSourceSpec is the remote source of the kustomize manifest.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket": "Bucket is the definition of bucket source.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.bucketName": "BucketName is the name of the object storage bucket.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nbucket. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `generic` provider.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.endpoint": "Endpoint is the object storage address the BucketName is located at.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.insecure": "Insecure allows connecting to a non-TLS HTTP Endpoint.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.interval": "Interval at which the Bucket Endpoint is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.prefix": "Prefix to use for server-side filtering of files in the Bucket.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.provider": "Provider of the object storage bucket.\nDefaults to 'generic', which expects an S3 (API) compatible object\nstorage.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Bucket server.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.region": "Region of the Endpoint where the BucketName is located in.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the Bucket.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts": "STS specifies the required configuration to use a Security Token\nService for fetching temporary credentials to authenticate in a\nBucket provider.\n\nThis field is only supported for the `aws` and `generic` providers.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nSTS endpoint. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `ldap` provider.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.endpoint": "Endpoint is the HTTP/S endpoint of the Security Token Service from\nwhere temporary credentials will be fetched.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.provider": "Provider of the Security Token Service.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the STS endpoint. This Secret must contain the fields `username`\nand `password` and is supported only for the `ldap` provider.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.sts.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.suspend": "Suspend tells the controller to suspend the reconciliation of this\nBucket.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.bucket.timeout": "Timeout for fetch operations, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git": "Git is the definition of git repository source.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include": "Include specifies a list of GitRepository resources which Artifacts\nshould be included in the Artifact produced for this GitRepository.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[]": "GitRepositoryInclude specifies a local reference to a GitRepository which\nArtifact (sub-)contents must be included, and where they should be placed.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].fromPath": "FromPath specifies the path to copy contents from, defaults to the root\nof the Artifact.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].repository": "GitRepositoryRef specifies the GitRepository which Artifact contents\nmust be included.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].repository.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.include[].toPath": "ToPath specifies the path to copy contents to, defaults to the name of\nthe GitRepositoryRef.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.interval": "Interval at which the GitRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.provider": "Provider used for authentication, can be 'azure', 'github', 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Git server.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.recurseSubmodules": "RecurseSubmodules enables the initialization of all submodules within\nthe GitRepository as cloned from the URL, using their default settings.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref": "Reference specifies the Git reference to resolve and monitor for\nchanges, defaults to the 'master' branch.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.branch": "Branch to check out, defaults to 'master' if no other field is defined.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.commit": "Commit SHA to check out, takes precedence over all reference fields.\n\nThis can be combined with Branch to shallow clone the branch, in which\nthe commit is expected to exist.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.name": "Name of the reference to check out; takes precedence over Branch, Tag and SemVer.\n\nIt must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description\nExamples: \"refs/heads/main\", \"refs/tags/v0.1.0\", \"refs/pull/420/head\", \"refs/merge-requests/1/head\"\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.semver": "SemVer tag expression to check out, takes precedence over Tag.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.ref.tag": "Tag to check out, takes precedence over Branch.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.secretRef": "SecretRef specifies the Secret containing authentication credentials for\nthe GitRepository.\nFor HTTPS repositories the Secret must contain 'username' and 'password'\nfields for basic auth or 'bearerToken' field for token auth.\nFor SSH repositories the Secret must contain 'identity'\nand 'known_hosts' fields.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.sparseCheckout": "SparseCheckout specifies a list of directories to checkout when cloning\nthe repository. If specified, only these directories are included in the\nArtifact produced for this GitRepository.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.sparseCheckout[]": "Must be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.suspend": "Suspend tells the controller to suspend the reconciliation of this\nGitRepository.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.timeout": "Timeout for Git operations like cloning, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.url": "URL specifies the Git repository URL, it can be an HTTP/S or SSH address.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify": "Verification specifies the configuration to verify the Git commit\nsignature(s).",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify.mode": "Mode specifies which Git object(s) should be verified.\n\nThe variants \"head\" and \"HEAD\" both imply the same thing, i.e. verify\nthe commit that the HEAD of the Git repository points to. The variant\n\"head\" solely exists to ensure backwards compatibility.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify.secretRef": "SecretRef specifies the Secret containing the public keys of trusted Git\nauthors.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.git.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci": "OCI is the definition of OCI repository source.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nregistry. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.insecure": "Insecure allows connecting to a non-TLS HTTP container registry.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.interval": "Interval at which the OCIRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.layerSelector": "LayerSelector specifies which layer should be extracted from the OCI artifact.\nWhen not specified, the first layer found in the artifact is selected.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.layerSelector.mediaType": "MediaType specifies the OCI media type of the layer\nwhich should be extracted from the OCI Artifact. The\nfirst layer matching this type is selected.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.layerSelector.operation": "Operation specifies how the selected layer should be processed.\nBy default, the layer compressed content is extracted to storage.\nWhen the operation is set to 'copy', the layer compressed content\nis persisted to storage as it is.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.provider": "The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the container registry.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref": "The OCI reference to pull and monitor for changes,\ndefaults to the latest tag.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.digest": "Digest is the image digest to pull, takes precedence over SemVer.\nThe value should be in the format 'sha256:\u003cHASH\u003e'.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.semver": "SemVer is the range of tags to pull selecting the latest within\nthe range, takes precedence over Tag.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.semverFilter": "SemverFilter is a regex pattern to filter the tags within the SemVer range.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.ref.tag": "Tag is the image tag to pull, defaults to latest.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.secretRef": "SecretRef contains the secret name containing the registry login\ncredentials to resolve image metadata.\nThe secret must be of type kubernetes.io/dockerconfigjson.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.serviceAccountName": "ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate\nthe image pull if the service account has attached pull secrets. For more information:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.suspend": "This flag tells the controller to suspend the reconciliation of this source.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.timeout": "The timeout for remote OCI Repository operations like pulling, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.url": "URL is a reference to an OCI artifact repository hosted\non a remote container registry.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify": "Verify contains the secret name containing the trusted public keys\nused to verify the signature and specifies which provider to use to check\nwhether OCI image is authentic.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity": "MatchOIDCIdentity specifies the identity matching criteria to use\nwhile verifying an OCI artifact which was signed using Cosign keyless\nsigning. The artifact's identity is deemed to be verified if any of the\nspecified matchers match against the identity.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity[]": "OIDCIdentityMatch specifies options for verifying the certificate identity,\ni.e. the issuer and the subject of the certificate.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity[].issuer": "Issuer specifies the regex pattern to match against to verify\nthe OIDC issuer in the Fulcio certificate. The pattern must be a\nvalid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.matchOIDCIdentity[].subject": "Subject specifies the regex pattern to match against to verify\nthe identity subject in the Fulcio certificate. The pattern must\nbe a valid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.provider": "Provider specifies the technology used to sign the OCI Artifact.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.secretRef": "SecretRef specifies the Kubernetes Secret containing the\ntrusted public keys.",
  "ServiceTemplate[].spec.helm.chartSource.remoteSourceSpec.oci.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec": "ChartSpec defines the desired state of the HelmChart to be created by the controller",
  "ServiceTemplate[].spec.helm.chartSpec.chart": "Chart is the name or path the Helm chart is available at in the\nSourceRef.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.ignoreMissingValuesFiles": "IgnoreMissingValuesFiles controls whether to silently ignore missing values\nfiles rather than failing.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSpec.interval": "Interval at which the HelmChart SourceRef is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.reconcileStrategy": "ReconcileStrategy determines what enables the creation of a new artifact.\nValid values are ('ChartVersion', 'Revision').\nSee the documentation of the values for an explanation on their behavior.\nDefaults to ChartVersion when omitted.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSpec.sourceRef": "SourceRef is the reference to the Source the chart is available at.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.sourceRef.apiVersion": "APIVersion of the referent.\nMust be a string.",
  "ServiceTemplate[].spec.helm.chartSpec.sourceRef.kind": "Kind of the referent, valid values are ('HelmRepository', 'GitRepository',\n'Bucket').\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.sourceRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.suspend": "Suspend tells the controller to suspend the reconciliation of this\nsource.\nMust be a boolean.",
  "ServiceTemplate[].spec.helm.chartSpec.valuesFiles": "ValuesFiles is an alternative list of values files to use as the chart\nvalues (values.yaml is not included by default), expected to be a\nrelative path in the SourceRef.\nValues files are merged in the order of this list with the last file\noverriding the first. Ignored when omitted.",
  "ServiceTemplate[].spec.helm.chartSpec.valuesFiles[]": "Must be a string.",
  "ServiceTemplate[].spec.helm.chartSpec.verify": "Verify contains the secret name containing the trusted public keys\nused to verify the signature and specifies which provider to use to check\nwhether OCI image is authentic.\nThis field is only supported when using HelmRepository source with spec.type 'oci'.\nChart dependencies, which are not bundled in the umbrella chart artifact, are not verified.",
  "ServiceTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity": "MatchOIDCIdentity specifies the identity matching criteria to use\nwhile verifying an OCI artifact which was signed using Cosign keyless\nsigning. The artifact's identity is deemed to be verified if any of the\nspecified matchers match against the identity.",
  "ServiceTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity[]": "OIDCIdentityMatch specifies options for verifying the certificate identity,\ni.e. the issuer and the subject of the certificate.",
  "ServiceTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity[].issuer": "Issuer specifies the regex pattern to match against to verify\nthe OIDC issuer in the Fulcio certificate. The pattern must be a\nvalid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.verify.matchOIDCIdentity[].subject": "Subject specifies the regex pattern to match against to verify\nthe identity subject in the Fulcio certificate. The pattern must\nbe a valid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.verify.provider": "Provider specifies the technology used to sign the OCI Artifact.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.verify.secretRef": "SecretRef specifies the Kubernetes Secret containing the\ntrusted public keys.",
  "ServiceTemplate[].spec.helm.chartSpec.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.helm.chartSpec.version": "Version is the chart version semver expression, ignored for charts from\nGitRepository and Bucket sources. Defaults to latest when omitted.\nMust be a string.",
  "ServiceTemplate[].spec.k8sConstraint": "Constraint describing compatible K8S versions of the cluster set in the SemVer format.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize": "Kustomize contains the Kustomize configuration for the template.",
  "ServiceTemplate[].spec.kustomize.deploymentType": "DeploymentType is the type of the deployment. This field is ignored,\nwhen ResourceSpec is used as part of Helm chart configuration.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.localSourceRef": "LocalSourceRef is the local source of the kustomize manifest.",
  "ServiceTemplate[].spec.kustomize.localSourceRef.kind": "Kind is the kind of the local source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.localSourceRef.name": "Name is the name of the local source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.localSourceRef.namespace": "Namespace is the namespace of the local source. Cross-namespace references\nare only allowed when the Kind is one of [github.com/fluxcd/source-controller/api/v1.GitRepository],\n[github.com/fluxcd/source-controller/api/v1.Bucket] or [github.com/fluxcd/source-controller/api/v1.OCIRepository].\nIf the Kind is ConfigMap or Secret, the namespace will be ignored.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.path": "Path to the directory containing the resource manifest.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec": "RemoteSourceSpec is the remote source of the kustomize manifest.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket": "Bucket is the definition of bucket source.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.bucketName": "BucketName is the name of the object storage bucket.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nbucket. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `generic` provider.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.endpoint": "Endpoint is the object storage address the BucketName is located at.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.insecure": "Insecure allows connecting to a non-TLS HTTP Endpoint.\nMust be a boolean.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.interval": "Interval at which the Bucket Endpoint is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.prefix": "Prefix to use for server-side filtering of files in the Bucket.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.provider": "Provider of the object storage bucket.\nDefaults to 'generic', which expects an S3 (API) compatible object\nstorage.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Bucket server.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.region": "Region of the Endpoint where the BucketName is located in.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the Bucket.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.sts": "STS specifies the required configuration to use a Security Token\nService for fetching temporary credentials to authenticate in a\nBucket provider.\n\nThis field is only supported for the `aws` and `generic` providers.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.sts.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nSTS endpoint. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `ldap` provider.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.sts.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.sts.endpoint": "Endpoint is the HTTP/S endpoint of the Security Token Service from\nwhere temporary credentials will be fetched.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.sts.provider": "Provider of the Security Token Service.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.sts.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the STS endpoint. This Secret must contain the fields `username`\nand `password` and is supported only for the `ldap` provider.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.sts.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.suspend": "Suspend tells the controller to suspend the reconciliation of this\nBucket.\nMust be a boolean.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.bucket.timeout": "Timeout for fetch operations, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git": "Git is the definition of git repository source.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.include": "Include specifies a list of GitRepository resources which Artifacts\nshould be included in the Artifact produced for this GitRepository.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.include[]": "GitRepositoryInclude specifies a local reference to a GitRepository which\nArtifact (sub-)contents must be included, and where they should be placed.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.include[].fromPath": "FromPath specifies the path to copy contents from, defaults to the root\nof the Artifact.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.include[].repository": "GitRepositoryRef specifies the GitRepository which Artifact contents\nmust be included.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.include[].repository.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.include[].toPath": "ToPath specifies the path to copy contents to, defaults to the name of\nthe GitRepositoryRef.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.interval": "Interval at which the GitRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.provider": "Provider used for authentication, can be 'azure', 'github', 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Git server.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.recurseSubmodules": "RecurseSubmodules enables the initialization of all submodules within\nthe GitRepository as cloned from the URL, using their default settings.\nMust be a boolean.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.ref": "Reference specifies the Git reference to resolve and monitor for\nchanges, defaults to the 'master' branch.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.ref.branch": "Branch to check out, defaults to 'master' if no other field is defined.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.ref.commit": "Commit SHA to check out, takes precedence over all reference fields.\n\nThis can be combined with Branch to shallow clone the branch, in which\nthe commit is expected to exist.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.ref.name": "Name of the reference to check out; takes precedence over Branch, Tag and SemVer.\n\nIt must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description\nExamples: \"refs/heads/main\", \"refs/tags/v0.1.0\", \"refs/pull/420/head\", \"refs/merge-requests/1/head\"\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.ref.semver": "SemVer tag expression to check out, takes precedence over Tag.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.ref.tag": "Tag to check out, takes precedence over Branch.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.secretRef": "SecretRef specifies the Secret containing authentication credentials for\nthe GitRepository.\nFor HTTPS repositories the Secret must contain 'username' and 'password'\nfields for basic auth or 'bearerToken' field for token auth.\nFor SSH repositories the Secret must contain 'identity'\nand 'known_hosts' fields.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.sparseCheckout": "SparseCheckout specifies a list of directories to checkout when cloning\nthe repository. If specified, only these directories are included in the\nArtifact produced for this GitRepository.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.sparseCheckout[]": "Must be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.suspend": "Suspend tells the controller to suspend the reconciliation of this\nGitRepository.\nMust be a boolean.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.timeout": "Timeout for Git operations like cloning, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.url": "URL specifies the Git repository URL, it can be an HTTP/S or SSH address.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.verify": "Verification specifies the configuration to verify the Git commit\nsignature(s).",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.verify.mode": "Mode specifies which Git object(s) should be verified.\n\nThe variants \"head\" and \"HEAD\" both imply the same thing, i.e. verify\nthe commit that the HEAD of the Git repository points to. The variant\n\"head\" solely exists to ensure backwards compatibility.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.verify.secretRef": "SecretRef specifies the Secret containing the public keys of trusted Git\nauthors.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.git.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci": "OCI is the definition of OCI repository source.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nregistry. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.insecure": "Insecure allows connecting to a non-TLS HTTP container registry.\nMust be a boolean.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.interval": "Interval at which the OCIRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.layerSelector": "LayerSelector specifies which layer should be extracted from the OCI artifact.\nWhen not specified, the first layer found in the artifact is selected.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.layerSelector.mediaType": "MediaType specifies the OCI media type of the layer\nwhich should be extracted from the OCI Artifact. The\nfirst layer matching this type is selected.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.layerSelector.operation": "Operation specifies how the selected layer should be processed.\nBy default, the layer compressed content is extracted to storage.\nWhen the operation is set to 'copy', the layer compressed content\nis persisted to storage as it is.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.provider": "The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the container registry.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.ref": "The OCI reference to pull and monitor for changes,\ndefaults to the latest tag.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.ref.digest": "Digest is the image digest to pull, takes precedence over SemVer.\nThe value should be in the format 'sha256:\u003cHASH\u003e'.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.ref.semver": "SemVer is the range of tags to pull selecting the latest within\nthe range, takes precedence over Tag.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.ref.semverFilter": "SemverFilter is a regex pattern to filter the tags within the SemVer range.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.ref.tag": "Tag is the image tag to pull, defaults to latest.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.secretRef": "SecretRef contains the secret name containing the registry login\ncredentials to resolve image metadata.\nThe secret must be of type kubernetes.io/dockerconfigjson.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.serviceAccountName": "ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate\nthe image pull if the service account has attached pull secrets. For more information:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.suspend": "This flag tells the controller to suspend the reconciliation of this source.\nMust be a boolean.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.timeout": "The timeout for remote OCI Repository operations like pulling, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.url": "URL is a reference to an OCI artifact repository hosted\non a remote container registry.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify": "Verify contains the secret name containing the trusted public keys\nused to verify the signature and specifies which provider to use to check\nwhether OCI image is authentic.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify.matchOIDCIdentity": "MatchOIDCIdentity specifies the identity matching criteria to use\nwhile verifying an OCI artifact which was signed using Cosign keyless\nsigning. The artifact's identity is deemed to be verified if any of the\nspecified matchers match against the identity.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify.matchOIDCIdentity[]": "OIDCIdentityMatch specifies options for verifying the certificate identity,\ni.e. the issuer and the subject of the certificate.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify.matchOIDCIdentity[].issuer": "Issuer specifies the regex pattern to match against to verify\nthe OIDC issuer in the Fulcio certificate. The pattern must be a\nvalid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify.matchOIDCIdentity[].subject": "Subject specifies the regex pattern to match against to verify\nthe identity subject in the Fulcio certificate. The pattern must\nbe a valid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify.provider": "Provider specifies the technology used to sign the OCI Artifact.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify.secretRef": "SecretRef specifies the Kubernetes Secret containing the\ntrusted public keys.",
  "ServiceTemplate[].spec.kustomize.remoteSourceSpec.oci.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources": "Resources contains the resource configuration for the template.",
  "ServiceTemplate[].spec.resources.deploymentType": "DeploymentType is the type of the deployment. This field is ignored,\nwhen ResourceSpec is used as part of Helm chart configuration.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.localSourceRef": "LocalSourceRef is the local source of the kustomize manifest.",
  "ServiceTemplate[].spec.resources.localSourceRef.kind": "Kind is the kind of the local source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.localSourceRef.name": "Name is the name of the local source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.localSourceRef.namespace": "Namespace is the namespace of the local source. Cross-namespace references\nare only allowed when the Kind is one of [github.com/fluxcd/source-controller/api/v1.GitRepository],\n[github.com/fluxcd/source-controller/api/v1.Bucket] or [github.com/fluxcd/source-controller/api/v1.OCIRepository].\nIf the Kind is ConfigMap or Secret, the namespace will be ignored.\nMust be a string.",
  "ServiceTemplate[].spec.resources.path": "Path to the directory containing the resource manifest.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec": "RemoteSourceSpec is the remote source of the kustomize manifest.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket": "Bucket is the definition of bucket source.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.bucketName": "BucketName is the name of the object storage bucket.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nbucket. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `generic` provider.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.endpoint": "Endpoint is the object storage address the BucketName is located at.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.insecure": "Insecure allows connecting to a non-TLS HTTP Endpoint.\nMust be a boolean.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.interval": "Interval at which the Bucket Endpoint is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.prefix": "Prefix to use for server-side filtering of files in the Bucket.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.provider": "Provider of the object storage bucket.\nDefaults to 'generic', which expects an S3 (API) compatible object\nstorage.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Bucket server.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.region": "Region of the Endpoint where the BucketName is located in.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the Bucket.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.sts": "STS specifies the required configuration to use a Security Token\nService for fetching temporary credentials to authenticate in a\nBucket provider.\n\nThis field is only supported for the `aws` and `generic` providers.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.sts.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nSTS endpoint. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\nThis field is only supported for the `ldap` provider.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.sts.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.sts.endpoint": "Endpoint is the HTTP/S endpoint of the Security Token Service from\nwhere temporary credentials will be fetched.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.sts.provider": "Provider of the Security Token Service.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.sts.secretRef": "SecretRef specifies the Secret containing authentication credentials\nfor the STS endpoint. This Secret must contain the fields `username`\nand `password` and is supported only for the `ldap` provider.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.sts.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.suspend": "Suspend tells the controller to suspend the reconciliation of this\nBucket.\nMust be a boolean.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.bucket.timeout": "Timeout for fetch operations, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git": "Git is the definition of git repository source.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.include": "Include specifies a list of GitRepository resources which Artifacts\nshould be included in the Artifact produced for this GitRepository.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.include[]": "GitRepositoryInclude specifies a local reference to a GitRepository which\nArtifact (sub-)contents must be included, and where they should be placed.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.include[].fromPath": "FromPath specifies the path to copy contents from, defaults to the root\nof the Artifact.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.include[].repository": "GitRepositoryRef specifies the GitRepository which Artifact contents\nmust be included.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.include[].repository.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.include[].toPath": "ToPath specifies the path to copy contents to, defaults to the name of\nthe GitRepositoryRef.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.interval": "Interval at which the GitRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.provider": "Provider used for authentication, can be 'azure', 'github', 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the Git server.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.recurseSubmodules": "RecurseSubmodules enables the initialization of all submodules within\nthe GitRepository as cloned from the URL, using their default settings.\nMust be a boolean.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.ref": "Reference specifies the Git reference to resolve and monitor for\nchanges, defaults to the 'master' branch.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.ref.branch": "Branch to check out, defaults to 'master' if no other field is defined.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.ref.commit": "Commit SHA to check out, takes precedence over all reference fields.\n\nThis can be combined with Branch to shallow clone the branch, in which\nthe commit is expected to exist.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.ref.name": "Name of the reference to check out; takes precedence over Branch, Tag and SemVer.\n\nIt must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description\nExamples: \"refs/heads/main\", \"refs/tags/v0.1.0\", \"refs/pull/420/head\", \"refs/merge-requests/1/head\"\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.ref.semver": "SemVer tag expression to check out, takes precedence over Tag.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.ref.tag": "Tag to check out, takes precedence over Branch.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.secretRef": "SecretRef specifies the Secret containing authentication credentials for\nthe GitRepository.\nFor HTTPS repositories the Secret must contain 'username' and 'password'\nfields for basic auth or 'bearerToken' field for token auth.\nFor SSH repositories the Secret must contain 'identity'\nand 'known_hosts' fields.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.sparseCheckout": "SparseCheckout specifies a list of directories to checkout when cloning\nthe repository. If specified, only these directories are included in the\nArtifact produced for this GitRepository.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.sparseCheckout[]": "Must be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.suspend": "Suspend tells the controller to suspend the reconciliation of this\nGitRepository.\nMust be a boolean.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.timeout": "Timeout for Git operations like cloning, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.url": "URL specifies the Git repository URL, it can be an HTTP/S or SSH address.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.verify": "Verification specifies the configuration to verify the Git commit\nsignature(s).",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.verify.mode": "Mode specifies which Git object(s) should be verified.\n\nThe variants \"head\" and \"HEAD\" both imply the same thing, i.e. verify\nthe commit that the HEAD of the Git repository points to. The variant\n\"head\" solely exists to ensure backwards compatibility.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.verify.secretRef": "SecretRef specifies the Secret containing the public keys of trusted Git\nauthors.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.git.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci": "OCI is the definition of OCI repository source.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.certSecretRef": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\nand whichever are supplied, will be used for connecting to the\nregistry. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.certSecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.ignore": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.insecure": "Insecure allows connecting to a non-TLS HTTP container registry.\nMust be a boolean.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.interval": "Interval at which the OCIRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.layerSelector": "LayerSelector specifies which layer should be extracted from the OCI artifact.\nWhen not specified, the first layer found in the artifact is selected.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.layerSelector.mediaType": "MediaType specifies the OCI media type of the layer\nwhich should be extracted from the OCI Artifact. The\nfirst layer matching this type is selected.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.layerSelector.operation": "Operation specifies how the selected layer should be processed.\nBy default, the layer compressed content is extracted to storage.\nWhen the operation is set to 'copy', the layer compressed content\nis persisted to storage as it is.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.provider": "The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.\nWhen not specified, defaults to 'generic'.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.proxySecretRef": "ProxySecretRef specifies the Secret containing the proxy configuration\nto use while communicating with the container registry.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.proxySecretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.ref": "The OCI reference to pull and monitor for changes,\ndefaults to the latest tag.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.ref.digest": "Digest is the image digest to pull, takes precedence over SemVer.\nThe value should be in the format 'sha256:\u003cHASH\u003e'.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.ref.semver": "SemVer is the range of tags to pull selecting the latest within\nthe range, takes precedence over Tag.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.ref.semverFilter": "SemverFilter is a regex pattern to filter the tags within the SemVer range.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.ref.tag": "Tag is the image tag to pull, defaults to latest.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.secretRef": "SecretRef contains the secret name containing the registry login\ncredentials to resolve image metadata.\nThe secret must be of type kubernetes.io/dockerconfigjson.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.serviceAccountName": "ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate\nthe image pull if the service account has attached pull secrets. For more information:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.suspend": "This flag tells the controller to suspend the reconciliation of this source.\nMust be a boolean.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.timeout": "The timeout for remote OCI Repository operations like pulling, defaults to 60s.\nMust be a string.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.url": "URL is a reference to an OCI artifact repository hosted\non a remote container registry.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify": "Verify contains the secret name containing the trusted public keys\nused to verify the signature and specifies which provider to use to check\nwhether OCI image is authentic.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify.matchOIDCIdentity": "MatchOIDCIdentity specifies the identity matching criteria to use\nwhile verifying an OCI artifact which was signed using Cosign keyless\nsigning. The artifact's identity is deemed to be verified if any of the\nspecified matchers match against the identity.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify.matchOIDCIdentity[]": "OIDCIdentityMatch specifies options for verifying the certificate identity,\ni.e. the issuer and the subject of the certificate.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify.matchOIDCIdentity[].issuer": "Issuer specifies the regex pattern to match against to verify\nthe OIDC issuer in the Fulcio certificate. The pattern must be a\nvalid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify.matchOIDCIdentity[].subject": "Subject specifies the regex pattern to match against to verify\nthe identity subject in the Fulcio certificate. The pattern must\nbe a valid Go regular expression.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify.provider": "Provider specifies the technology used to sign the OCI Artifact.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify.secretRef": "SecretRef specifies the Kubernetes Secret containing the\ntrusted public keys.",
  "ServiceTemplate[].spec.resources.remoteSourceSpec.oci.verify.secretRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].spec.version": "Version is the semantic version of the application backed by template.\nMust be a string.",
  "ServiceTemplate[].status": "ServiceTemplateStatus defines the observed state of ServiceTemplate",
  "ServiceTemplate[].status.chartRef": "ChartRef is a reference to a source controller resource containing the\nHelm chart representing the template.",
  "ServiceTemplate[].status.chartRef.apiVersion": "APIVersion of the referent.\nMust be a string.",
  "ServiceTemplate[].status.chartRef.kind": "Kind of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.chartRef.name": "Name of the referent.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.chartRef.namespace": "Namespace of the referent, defaults to the namespace of the Kubernetes\nresource object that contains the reference.\nMust be a string.",
  "ServiceTemplate[].status.chartVersion": "ChartVersion represents the version of the Helm Chart associated with this template.\nMust be a string.",
  "ServiceTemplate[].status.config": "Config demonstrates available parameters for template customization,\nthat can be used when creating ClusterDeployment objects.\nMust be a .",
  "ServiceTemplate[].status.description": "Description contains information about the template.\nMust be a string.",
  "ServiceTemplate[].status.k8sConstraint": "Constraint describing compatible K8S versions of the cluster set in the SemVer format.\nMust be a string.",
  "ServiceTemplate[].status.observedGeneration": "ObservedGeneration is the last observed generation.\nMust be a integer.",
  "ServiceTemplate[].status.sourceStatus": "SourceStatus reflects the status of the source.",
  "ServiceTemplate[].status.sourceStatus.artifact": "Artifact is the artifact that was generated from the template source.",
  "ServiceTemplate[].status.sourceStatus.artifact.digest": "Digest is the digest of the file in the form of '\u003calgorithm\u003e:\u003cchecksum\u003e'.\nMust be a string.",
  "ServiceTemplate[].status.sourceStatus.artifact.lastUpdateTime": "LastUpdateTime is the timestamp corresponding to the last update of the\nArtifact.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.artifact.metadata": "Metadata holds upstream information such as OCI annotations.",
  "ServiceTemplate[].status.sourceStatus.artifact.path": "Path is the relative file path of the Artifact. It can be used to locate\nthe file in the root of the Artifact storage on the local file system of\nthe controller managing the Source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.artifact.revision": "Revision is a human-readable identifier traceable in the origin source\nsystem. It can be a Git commit SHA, Git tag, a Helm chart version, etc.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.artifact.size": "Size is the number of bytes in the file.\nMust be a integer.",
  "ServiceTemplate[].status.sourceStatus.artifact.url": "URL is the HTTP address of the Artifact as exposed by the controller\nmanaging the Source. It can be used to retrieve the Artifact for\nconsumption, e.g. by another controller applying the Artifact contents.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.conditions": "Conditions reflects the conditions of the remote source object.",
  "ServiceTemplate[].status.sourceStatus.conditions[]": "Condition contains details for one aspect of the current state of this API Resource.",
  "ServiceTemplate[].status.sourceStatus.conditions[].lastTransitionTime": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.conditions[].message": "message is a human readable message indicating details about the transition.\nThis may be an empty string.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.conditions[].observedGeneration": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.\nMust be a integer.",
  "ServiceTemplate[].status.sourceStatus.conditions[].reason": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.conditions[].status": "status of the condition, one of True, False, Unknown.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.conditions[].type": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.kind": "Kind is the kind of the remote source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.name": "Name is the name of the remote source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.namespace": "Namespace is the namespace of the remote source.\nMust be a string.\nRequired.",
  "ServiceTemplate[].status.sourceStatus.observedGeneration": "ObservedGeneration is the latest source generation observed by the controller.\nMust be a integer.",
  "ServiceTemplate[].status.valid": "Valid indicates whether the template passed validation or not.\nMust be a boolean.\nRequired.",
  "ServiceTemplate[].status.validationError": "ValidationError provides information regarding issues encountered during template validation.\nMust be a string."
}
